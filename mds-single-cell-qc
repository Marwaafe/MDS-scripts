

# Load libraries
library(Seurat)
library(Matrix)
library(ggplot2)

# Set the path to your filtered_feature_bc_matrix.h5 file
sample_name <- "MDS005-09-247" 

# Construct the path to your raw .h5 file
data_path <- file.path(
  "MDS_Data", 
  "MDS_OUTS_CellRangerCount", 
  paste0(sample_name, "_count_output"), 
  paste0(sample_name, "_count"), 
  "outs", 
  "raw_feature_bc_matrix.h5"
)

# Read in RNA + ADT data from 10X h5 file
data <- Read10X_h5(data_path)

# Create Seurat object using RNA
seurat_obj <- CreateSeuratObject(
  counts = data[["Gene Expression"]],
  assay = "RNA",
  project = sample_name
)

if ("Antibody Capture" %in% names(data)) {
  adt_counts <- data[["Antibody Capture"]]
  seurat_obj[["ADT"]] <- CreateAssayObject(counts = adt_counts)
}

# Calculate percent.mt
seurat_obj[["percent.mt"]] <- PercentageFeatureSet(seurat_obj, pattern = "^MT-")

# Plot RNA QC metrics
VlnPlot(seurat_obj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

# Filter cells based on RNA QC
seurat_obj <- subset(seurat_obj, subset = nFeature_RNA > 500 & nFeature_RNA < 2500 & percent.mt < 10)

# Normalize RNA (LogNormalize)
seurat_obj <- NormalizeData(seurat_obj, normalization.method = "LogNormalize", assay = "RNA")

if ("ADT" %in% names(seurat_obj@assays)) {
  seurat_obj <- NormalizeData(seurat_obj, normalization.method = "CLR", margin = 2, assay = "ADT")

  # Define your target ADT features
  adt_features <- c("CD3", "CD4", "CD8", "CD14")
  adt_data <- GetAssayData(seurat_obj, assay = "ADT", layer = "data")

  # Keep features that exist and have non-zero, non-NA expression across cells
  valid_adt_features <- Filter(function(feature) {
    feature %in% rownames(adt_data) &&
      any(!is.na(adt_data[feature, ])) &&
      sum(adt_data[feature, ], na.rm = TRUE) > 0
  }, adt_features)

  if (length(valid_adt_features) > 0) {
    VlnPlot(seurat_obj, features = valid_adt_features, assay = "ADT", layer = "data", ncol = 2)
  } else {
    message("No ADT markers with valid non-zero expression found.")
  }
}


# Save object for later use
saveRDS(seurat_obj, file = paste0(sample_name, "_filtered_normalized.rds"))
